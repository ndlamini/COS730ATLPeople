package ATPeopleCOS730;




import aTPeopleCOS730.Group;
import aTPeopleCOS730.InvalidEmailException;
import aTPeopleCOS730.Person;
import aTPeopleCOS730.ResearchCategoryState;
import aTPeopleCOS730.ResearchGroupAssociationType;
import aTPeopleCOS730.ResearcherCategory;
import defaultImpl.*;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.Date;

//aTPeopleCOS730
//import junit.framework.Test;
//import junit.framework.TestCase;
//import junit.framework.TestSuite;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class ResearchCategoryStateImplementationTest
{
	
	float r1, r2;
	private ResearchCategoryStateImplementation researchCategoryState,researchCategoryState1;
	private ResearchGroupAssociationImplementation regroupAsso1,regroupAsso2;
	private PersonImplementation admin,notAdmin,p_noValidEmail,researcher1,student,researcher2,leaderGroup1,leaderGroup2;
	private GroupImplementation group1, group2 ,group3;
	private ResearchGroupAssociationType researhgrpAssiaType;
	private ResearcherCategoryImplementation researchCatergory1,researchCatergory2;
	
	Date myDate =new Date();
	
	@Before
	public void ResearchCategoryState() throws Exception
	{
		
		researchCategoryState1 = new ResearchCategoryStateImplementation(myDate,0.4f);
		researchCategoryState = new ResearchCategoryStateImplementation(myDate,0.9f);
		
		//researchCatergory1 = new ResearcherCategoryImplementation(researchCategoryState);
		//researchCatergory2 =new ResearcherCategoryImplementation(researchCategoryState1);
	}
	@Test
	public void ResearchCategoryStateImplementationMethods()
	{
		assertNotNull("Could not instatiate RearchCategoryState",researchCategoryState1);
		assertNotSame("Different research catergory state assumed to be the same",researchCategoryState1,researchCategoryState);
		assertNotSame("Wrongly returns output targets that are not equal as equal",researchCategoryState1.getResearchOutputTarget(),researchCategoryState.getResearchOutputTarget());
		assertNotNull("Method to return date for research catergory failed to return the assigned date",researchCategoryState1.getEffectiveDate());
	}
	@Test
	public void testSuspendedException()
	{
		
	}
	
	
}
